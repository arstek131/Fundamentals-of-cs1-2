Creo una variabile temporanea (x) a cui assegno il primo elemento dell'array, e vado alla ricerca del minimo, appena lo trovo scambio di posto il minimo trovato (y) con la variabile temporanea (x), dopodichè mi metto ad analizzare l'array di dimensione N-1 --> sottosequenza di destra (perchè praticamente lo suddivido in 2 sottosequenze, una ordinata (man mano che procedo) ovvero --> sottosequenza di sinistra e l'altra no (dove vado sempre a pescare il minimo))

***************************************************************************************************
int i,j,min;
  int temp;

  for(i=0; i<n-1; i++)
  {
     min = i;

     for(j=i+1; j<n; j++)
         {
            if(v[j] < v[min])
            {
            	min = j;
            	temp=v[min];
            	v[min]=v[i];
            	v[i]=temp;
            }
         }
   }

VERSIONE BY PROF:

void naiveSort(int v[], int dim)
{
	int p;
	while (dim>1) 
	{
		p = trovaPosMax(v, dim);
		if (p < dim-1)
		{
			scambia(&v[p],&v[dim-1]);
		} 
		dim--;
	}
}
int trovaPosMax(int v[], int n)
{
	int i, p=0; /* ipotesi: max = v[0] */
	for (i=1; i<n; i++)
	{
		if (v[p]<v[i]) 
		{
			p=i;
		}
	}
	return p;
		
}


